Question 1: 

1) To check whether some anagram of 't' is a substring of 's'.
2) The technique used is to compile a dictionary of alphabet  
   counts for 't' and check with every possible consecutive 
   substring sets in 's'.
3) The variable used is a 'dictionary' to store the counts of 
   alphabets in 't'.
4) Time Effeciency 
   Let's assume n = length of 's'
		Worst case   = O{n}
		Average Case = O{n/2}	
5) Space Effeciency  = O{1}

---------------------------------------------------------------------
		
Question 2: 

1) To find the longest palindromic substring contained in 'a'.
2) The technique used is Manacher' algorithm.
3) The variables used is one list of size twice the length of 'a'
   and a few int variables for counts.
4) Time Effeciency 
   Let's assume n = length(a) 
   Worst case   = O{ 2n}
		= O{n}
   Average Case = O{n}	
5) Space Effeciency  = O{2n} 
		     = O{n}

---------------------------------------------------------------------
		
Question 3: 

1) To find the minimum spanning tree within undirected graph G.
2) The MST is found out usning Prim's Algoritham
3) The variables used are include 'integer', 'string', 'list' ,'dictionaries' 
   and a heap queue. The heap queue ("usable edges") has the edge with  the 
   minimum edge cost at its root position when new edge combinations are added
   to it. 
4) Time Effeciency 
   Let's assume n is the number of edges. The effeciency is affected while 
   converting the dictionary data structure into required format to be inputted 
   to prims algoritham.
   Worst case   = O{(n-1)*n}
				= O{n^2}	
5) Space Effeciency  = O{n^2}

---------------------------------------------------------------------
		
Question 4: 

1) To find the Find the least common ancestor between two nodes on a binary 
   search tree.
2) The technique used is to find the list of parents of the first element checked, 
   store them in a list and check whether a parent of the second element can be
   found in the stored list
3) The variables used are include 'integer' and 'list' to store the parents.
4) Time Effeciency 
   Let's assume there are n elements in the binary search tree and while
   searching through the adjacency matrix, efficiency
   Worst case   = O{n^2}
   Average Case = O{n^2/2}
5) Space Effeciency  = O{n/2}

------------------------------------------------------------------------

Question 4: 

1) To find the least common ancestor between two nodes on a binary 
   search tree.
2) The technique used is to find the list of parents of the first element checked, 
   store them in a list and check whether a parent of the second element can be
   found in the stored list
3) The variables used are include 'integer' and 'list' to store the parents.
4) Time Effeciency 
   Let's assume there are n elements in the binary search tree and while
   searching through the adjacency matrix, efficiency
   Worst case   = O{n^2}
   Average Case = O{n^2/2}
5) Space Effeciency  = O{n/2}

------------------------------------------------------------------------

Question 5: 

1) To find the element in a singly linked list that's m elements from the end.
2) The technique used is to find the the length of linked list, subtract 'm' to 
   find the posititon from the begining and then find the element
3) The variables used are include 'integer' and class objects. Class objects makes it 
   much easier to represent linked list as we can easily link one lement to the next element.
4) Time Effeciency 
   Let's assume there are n elements in the linked list and we need to find 'm'th
   element from the end
   Worst case   = O{n+(n-m)}
   Average Case = O{2n-m}
5) Space Effeciency  = O{1}

------------------------------------------------------------------------

Question 4: 
